#!/usr/bin/env bash
set -euo pipefail

# 引入配置
source ./config.sh

# 延迟到指定开始时间（如设置了 SCHEDULE_TIME）
if [[ -n "$SCHEDULE_TIME" ]]; then
  current=$(date +"%H:%M")
  echo "Scheduled start at $SCHEDULE_TIME, current time is $current"
  start_sec=$(date -d "$SCHEDULE_TIME" +%s)
  now_sec=$(date +%s)
  if (( start_sec > now_sec )); then
    sleep $((start_sec - now_sec))
  fi
fi

echo "=== Batch run with averaging start: $(date) ==="

# 合并所有模型的轮次统计
for model in "${MODELS[@]}"; do
  echo
  echo "======== 模型: ${model} ========"

  acc_sum=0
  f1_sum=0
  acc_arr=()
  f1_arr=()

  for ((i=0; i<REPEAT; i++)); do
    seed=${SEEDS[i]:-${SEEDS[-1]}}
    echo "--> Round $((i+1))/${REPEAT}, seed=${seed}"

    # 构造命令数组
    cmd=(
      python main.py
        --encoding_model_name "$model"
        --device_name "$DEVICE"
        --batch_size "$BATCH_SIZE"
        --learning_rate "$LR"
        --max_sequence_length "$MAX_SEQ_LEN"
        --max_epoch "$MAX_EPOCH"
        --eval_epochs "$EVAL_EPOCHS"
        --early_stop_epochs "$EARLY_STOP"
        --pooling_type "$POOL_TYPE"
        --n_class "$N_CLASS"
        --random_seed "$seed"
        --model_mode "$MODE"
        --log "$LOG"
    )

    # Dry-run 模式：只打印命令，不执行
    if [[ "$DRY_RUN" == "yes" ]]; then
      echo "[DRY-RUN] ${cmd[*]}"
      continue
    fi

    # 执行并捕获输出
    output=$("${cmd[@]}" 2>&1)

    # 提取指标
    acc=$(echo "$output" | grep -i "Test Accuracy" | tail -1 | awk '{print $NF}')
    f1=$(echo "$output" | grep -i "Test F1"       | tail -1 | awk '{print $NF}')

    # 默认 0
    acc=${acc:-0}
    f1=${f1:-0}

    # 累加
    acc_sum=$(echo "$acc_sum + $acc" | bc)
    f1_sum=$(echo "$f1_sum + $f1"   | bc)

    acc_arr+=("$acc")
    f1_arr+=("$f1")

    echo "Result: ACC=$acc, F1=$f1"
  done

  # 计算平均值
  if (( REPEAT > 0 )); then
    avg_acc=$(echo "scale=4; $acc_sum / $REPEAT" | bc)
    avg_f1=$(echo "scale=4; $f1_sum   / $REPEAT" | bc)
  else
    avg_acc=0
    avg_f1=0
  fi

  echo
  echo ">>> 模型 ${model} 的 ${REPEAT} 次平均结果："
  echo "    ACC 平均值: $avg_acc"
  echo "    F1 平均值 : $avg_f1"
done

echo
echo "=== All finished: $(date) ==="
